To build a **CloudWatch Dashboard** with the following features based on your sample log, we can use a combination of:

* **CloudWatch Logs Insights queries** (for monthly aggregation, URI breakdown, filters)
* **CloudWatch Dashboard widgets** (for visualization: line/bar graphs, tables)
* **Filters or search** in the query section (for filtering on `RequestUri` or `User ID`)

---

### ✅ Goal Summary

You want a CloudWatch Dashboard with:

1. **Monthly API Request Metrics**

   * Total number of API requests per month
   * Per-URI breakdown

2. **Filtering + Visualization**

   * Filter by `RequestUri`
   * View trends over time (line/bar chart)

3. **Search**

   * Full-text search in logs (e.g., by `User ID`, `Params`, etc.)

---

## ✅ Step-by-Step Plan

---

### 🧩 1. Use Log Insights Queries (for Dashboard Widgets)

You will write a **CloudWatch Logs Insights query** that:

* Parses fields (`RequestUri`, `User ID`, etc.)
* Groups by month
* Aggregates count
* Filters by path (optional)

---

#### ✅ Basic Query: Monthly API Hits by URI

```sql
fields @timestamp, @message
| parse @message '*User ID: * "RequestUri: * " Input Params:* "Total Time Taken: * " "Status: *' 
    as userId, requestUri, inputParams, totalTime, status
| stats count(*) as requestCount 
    by bin(1d, @timestamp), requestUri
| sort @timestamp asc
```

* `bin(1d, @timestamp)` groups requests by **daily** timestamp.
* You can replace `1d` with `1w` or `1M` for **weekly/monthly** aggregation.
* You can filter by specific URI like:

  ```sql
  | filter requestUri = "/data-availability-check"
  ```

---

#### 🔍 For Dashboard Filtering (Optional)

To enable filtering from the dashboard UI:

* Use a **Logs Insights widget** with a filter on `requestUri`:

  ```sql
  | filter requestUri like /data-availability/
  ```

---

### 📊 2. Add Dashboard Widgets

In CloudWatch:

* Go to **Dashboards > Create Dashboard**
* Add **Line/Bar/Number** widget
* Choose **Logs Insights**
* Paste your query
* Choose the correct log group

#### 📌 Examples:

* **Line Chart**: Request Count over Time (`bin(1M)` or `bin(1d)`)
* **Table**: Top 10 URIs with most hits
* **Bar Chart**: URI path vs. count
* **Search Box**: For userId / Params matching

---

### 🔎 3. Optional: Full Search Query

To enable search across all fields (like a mini search engine):

```sql
fields @timestamp, userId, requestUri, status, inputParams
| parse @message '*User ID: * "RequestUri: * " Input Params:* "Total Time Taken: * " "Status: *' 
    as userId, requestUri, inputParams, totalTime, status
| filter ispresent(userId)
| sort @timestamp desc
```

* This allows free-text search over parsed values.

---

## 🛠 Recommended Dashboard Widgets Setup

| Widget Type          | Query Purpose          | Notes                                |
| -------------------- | ---------------------- | ------------------------------------ |
| Line Chart           | Requests per Day/Month | Group by `bin(1d or 1M)`             |
| Bar Chart            | Count per `requestUri` | Breakdown per API path               |
| Table                | Full logs with fields  | Parsed `User ID`, `requestUri`, etc. |
| Logs Insights Search | Raw filtered logs      | Search by `userId`, `params`, etc.   |

---

## 📌 Example Monthly Aggregation Query

```sql
fields @timestamp, @message
| parse @message '*User ID: * "RequestUri: * " Input Params:* "Total Time Taken: * " "Status: *' 
    as userId, requestUri, inputParams, totalTime, status
| stats count(*) as totalRequests 
    by bin(1M, @timestamp), requestUri
| sort @timestamp asc
```

---

## ✅ Final Tips

* Use **`bin(1M, @timestamp)`** for **monthly trend**
* Use **`stats count(*) by requestUri`** for **API path breakdown**
* You can use **CloudWatch Metric Filters** + **custom namespace** if you need metrics instead of Logs Insights
* Use **dynamic filters** to allow dashboard users to choose URIs interactively

---

Would you like me to generate JSON for a CloudWatch dashboard with pre-built widgets like:

* Monthly trends
* URI breakdown
* Search panel?

Or do you want this inside **Terraform/CDK**?
