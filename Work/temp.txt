Perfect ‚Äî thanks for the screenshot!

You‚Äôre currently using this working query:

```sql
fields @timestamp, @message, @logStream, @log
| sort @timestamp desc
| limit 1000
```

This shows **raw log data**, but now you want to build a **graph-based dashboard** for monthly API metrics.

## Let me walk you through how to:

## ‚úÖ Step-by-Step: Dashboard with Monthly API Metrics + Filters

---

### üß© 1. **Refined Working Query**

To **parse fields properly** and avoid type mismatches, use this improved query:

```sql
fields @timestamp, @message
| parse @message '*User ID: * "RequestUri: * " Input Params:* "Total Time Taken: * "Status: *' 
       as userId, requestUri, inputParams, totalTimeStr, statusStr
| parse totalTimeStr as totalTime:number
| parse statusStr as status:number
| stats count(*) as requestCount 
       by bin(1M, @timestamp), requestUri
| sort @timestamp asc
```

---

### üß™ Optional: Add Filters

* **By URI**

```sql
| filter requestUri like /short-term-risk/
```

* **By User ID**

```sql
| filter userId = 'ggdilprd'
```

---

### üìä 2. **Create Dashboard**

1. Go to **CloudWatch ‚Üí Dashboards**
2. Click **Create dashboard**
3. Name it something like `API-Metrics-Dashboard`
4. Add widget ‚Üí **Line or Bar graph**
5. Choose **Logs Insights**
6. Pick your Log Group
7. Paste the **query above**
8. Set refresh interval (e.g., every 5 minutes)

---

### üéØ Widget Suggestions

| Widget Type    | Query                                      | Notes                              |
| -------------- | ------------------------------------------ | ---------------------------------- |
| **Line Chart** | Monthly requests over time by `requestUri` | Use `bin(1M, @timestamp)`          |
| **Bar Chart**  | Top request URIs                           | Use `stats count(*) by requestUri` |
| **Table**      | Parsed details (userId, URI, status, time) | Show recent logs with limit        |
| **Search**     | Add full search query to match any field   | Use `@message like /pattern/`      |

---

### üîç 3. **Full Search Query (Optional for Table View)**

To get recent full logs with parsed values:

```sql
fields @timestamp, userId, requestUri, inputParams, totalTimeStr, statusStr
| parse @message '*User ID: * "RequestUri: * " Input Params:* "Total Time Taken: * "Status: *' 
       as userId, requestUri, inputParams, totalTimeStr, statusStr
| sort @timestamp desc
| limit 100
```

---

### ‚ö†Ô∏è TypeError / TypeMismatch Fix Tips

* Always parse numbers from strings:

  ```sql
  | parse statusStr as status:number
  ```

* Don‚Äôt do math or grouping on unconverted fields (`statusStr`, `totalTimeStr`)

---

### ‚úÖ Final Tip

Once the widgets are in your dashboard, you can:

* **Download JSON** for version control
* **Add filters** to interactively change `requestUri`/`userId`
* **Clone** for other environments (prod/dev)

---

Do you want me to:

* Create a sample **CloudWatch Dashboard JSON** you can import?
* Or help you create these widgets one-by-one with visual steps?

Let me know.
